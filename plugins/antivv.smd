/**

//══════════════════════════════════════════════════════════════════════════════════════════════════════//
//                                                                                                      //
//                                ＷＨＡＴＳＡＰＰ ＢＯＴ－ＭＤ ＢＥＴＡ                                   //
//                                                                                                      // 
//                                         Ｖ：1．2．2                                                   // 
//                                                                                                      // 
//            ███████╗██╗   ██╗██╗  ██╗ █████╗ ██╗██╗         ███╗   ███╗██████╗                        //
//            ██╔════╝██║   ██║██║  ██║██╔══██╗██║██║         ████╗ ████║██╔══██╗                       //
//            ███████╗██║   ██║███████║███████║██║██║         ██╔████╔██║██║  ██║                       //
//            ╚════██║██║   ██║██╔══██║██╔══██║██║██║         ██║╚██╔╝██║██║  ██║                       //
//            ███████║╚██████╔╝██║  ██║██║  ██║██║███████╗    ██║ ╚═╝ ██║██████╔╝                       //
//            ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚══════╝    ╚═╝     ╚═╝╚═════╝                        //
//                                                                                                      //
//                                                                                                      //
//                                                                                                      //
//══════════════════════════════════════════════════════════════════════════════════════════════════════//

CURRENTLY RUNNING ON BETA VERSION!!
*
   * @project_name : Suhail-Md
   * @author : Suhail Tech Info
   * @youtube : https://www.youtube.com/c/@SuhailTechInfo
   * @infoription : Suhail-Md ,A Multi-functional whatsapp user bot.
   * @version 1.2.2 
*
   * Licensed under the  GPL-3.0 License;
* 
   * ┌┤Created By Suhail Tech Info.
   * © 2023 Suhail-Md ✭ ⛥.
   * plugin date : 11/18/2023
* 
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
     const { smd, tlang, bot_, prefix, Config } = require('../lib');

let bgmm = false;

// Anti-ViewOnce Command
smd({
    cmdname: "antivv",
    alias: ["antiviewonce"],
    desc: "Turn On/Off automatic ViewOnce media downloader.",
    fromMe: true,
    type: "general",
    use: "<on/off>",
    filename: __filename
}, async (message, match) => {
    try {
        // Get user settings
        bgmm = await bot_.findOne({ id: "bot_" + message.user }) || await bot_.findOne({ id: "bot_" + message.user });

        let input = match.trim().split(" ")[0].toLowerCase();
        
        if (["on", "enable", "act"].includes(input)) {
            if (bgmm?.antiviewonce === "true") {
                return await message.reply("*AntiViewOnce is already enabled!*");
            }
            await bot_.updateOne({ id: "bot_" + message.user }, { antiviewonce: "true" }, { upsert: true });
            return await message.reply("*AntiViewOnce successfully enabled!*");
        } 
        
        if (["off", "disable", "deact"].includes(input)) {
            if (bgmm?.antiviewonce === "false") {
                return await message.reply("*AntiViewOnce is already disabled!*");
            }
            await bot_.updateOne({ id: "bot_" + message.user }, { antiviewonce: "false" }, { upsert: true });
            return await message.reply("*AntiViewOnce successfully disabled!*");
        } 
        
        return await message.reply("*Use on/off to enable/disable AntiViewOnce!*");

    } catch (error) {
        await message.reply("Error while updating AntiViewOnce settings: " + error.message);
    }
});

// Detect and Download ViewOnce Media
smd({ on: "message" }, async (message) => {
    try {
        if (!bgmm) {
            bgmm = await bot_.findOne({ id: "bot_" + message.user });
        }

        if (bgmm?.antiviewonce === "true" && message.mtype === "viewOnceMessage") {
            await message.reply("```[VIEWONCE DETECTED] Downloading...```");
            
            let mediaPath = await message.msg.downloadAndSaveMediaMessage(message.msg);
            let quotedMsg = {
                key: { ...message.key },
                message: { conversation: "```[VIEWONCE DETECTED]```" }
            };

            await message.bot.sendMessage(message.from, {
                [message.mtype.split("Message")[0]]: { url: mediaPath },
                caption: message.body
            }, { quoted: quotedMsg });
        }

    } catch (error) {
        console.error("Error while processing ViewOnce media:", error);
    }
});
